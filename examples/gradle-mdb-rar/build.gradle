plugins {
    id 'java'
    id 'war'
}

repositories {    
    mavenCentral()
    mavenLocal()
}

configurations{
    kafkaRAR {
        transitive = false
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

war{
    archiveBaseName = "gradle-demo"
    exclude("*.cli")
    exclude("*properties")
    exclude("**module.xml")
}

dependencies {
    compileOnly 'jakarta.platform:jakarta.jakartaee-api:10.0.0'
    compileOnly 'fish.payara.cloud.connectors.kafka:kafka-jca-api:1.0.0'
    compileOnly 'org.jboss.ejb3:jboss-ejb3-ext-api:2.3.0.Final'
    kafkaRAR 'fish.payara.cloud.connectors.kafka:kafka-rar:1.0.0'

}


task getRAR(type: Copy) {
    from configurations.kafkaRAR
    into layout.buildDirectory.dir("../target/build")
}

task getCliScript(type: Exec){
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'mvnw.cmd', 'generate-sources'
    } else {
        commandLine './mvnw', 'generate-sources'
    }
}

task makeHollowJar(type: Exec){
    dependsOn getCliScript
    dependsOn getRAR
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'mvnw.cmd', 'wildfly-jar:package'
    } else {
        commandLine './mvnw', 'wildfly-jar:package'
    }
}

task mavenClean(type: Exec){
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'mvnw.cmd', 'clean'
    } else {
        commandLine './mvnw', 'clean'
    }
}
wrapper{
    gradleVersion = '8.7'
}


clean.dependsOn mavenClean
build.dependsOn makeHollowJar

